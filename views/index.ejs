<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <title>Document</title>
</head>
<style>
    #quiz-container {
  max-width: 800px;
  margin: 0 auto;
  padding: 20px;
  background-color: #f2f2f2;
  border-radius: 5px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
}

.question {
  margin-bottom: 20px;
}

.option {
  display: block;
  margin: 10px 0;
}



    .quiz-question {
      margin-bottom: 1rem;
      font-weight: bold;
    }
    .quiz-option {
      margin-bottom: 0.5rem;
    }
    .quiz-option input[type="radio"] {
      margin-right: 0.5rem;
    }
    /* CSS for pagination buttons */
#pagination-container {
  display: flex;
  justify-content: center;
  margin-top: 20px;
}

#pagination-container button {
  background-color: #008CBA;
  color: white;
  border: none;
  padding: 10px;
  margin: 0 5px;
  cursor: pointer;
}

#pagination-container button[disabled] {
  opacity: 0.5;
  cursor: default;
}
</style>
<body>
    <section>
        <button id="startBtn">Click Here To Start Your Test</button>
    </section>
    <div id="quiz-container">
        <h2>Welcome..</h2>
    </div>
    <div id="pagination-container">
    </div>
</body>
<script>
    const quizContainer = document.getElementById('quiz-container');
    const questionsPerPage = 3;
    let currentPage = 1;
    axios.get('/getquestions').then((res)=>{
    const questions = res.data
    let selectedOptions = {}
    function showQuestions(page) {
      const startIndex = (page - 1) * questionsPerPage;
      const endIndex = startIndex + questionsPerPage;
      const pageQuestions = questions.slice(startIndex, endIndex);
      let html = '';
      pageQuestions.forEach(question => {
        html += `
          <div class="quiz-question">
            <p>${question.question}</p>
          </div>
        `;
        // iterate over options array to generate radio buttons
        console.log(questions.length,'len ques')
        for (let i = 0; i < question.options.length; i++) {
          const option = question.options[i];
          html += `
            <div class="quiz-option">
              <input type="radio" name="answer${question._id}" value="${option}">
              <label for="answer${question._id}${option}">${option}</label>
            </div>
          `;
        }
      });
      quizContainer.innerHTML = html;  
}
    function handlePaginationClick(event) {
  const page = parseInt(event.target.dataset.page);
  currentPage = page;
  showQuestions(currentPage);
  renderPagination();
}   
function renderPagination() {
  const numPages = Math.ceil(questions.length / questionsPerPage);
  console.log(numPages)
  let html = '';
  for (let i = 1; i <= numPages; i++) {
    html += `
      <button data-page="${i}" ${currentPage === i ? 'disabled' : ''}>${i}</button>
    `;
  }
  const paginationContainer = document.getElementById('pagination-container');
  paginationContainer.innerHTML = html;
  const paginationButtons = paginationContainer.querySelectorAll('button');
  paginationButtons.forEach(button => {
    button.addEventListener('click', handlePaginationClick)
  });
}
showQuestions(currentPage);
renderPagination();
})
  </script>
</html>